pool:
  vmImage: 'ubuntu-latest'

name: "$(Rev:r)"
variables:
  - name: MajorMinor
    value: '3.3'
  - name: ProductVersion
    ${{ if eq(variables['Build.SourceBranchName'], 'release') }}:
      value: 'MyProduct-$(MajorMinor)'
    ${{ else }}:
      value: 'MyProduct-$(MajorMinor)-beta-$(Build.BuildNumber)'

stages:
- stage: ci
  displayName: Continuous Integration
  jobs:
  - job: publish_artifact
    displayName: 'Package Weather Forecast API'
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core SDK 8.x'
      inputs:
        version: '8.x'

    - task: DotNetCoreCLI@2
      displayName: 'Dotnet Publish'
      inputs:
        command: 'publish'
        arguments: '--configuration $(configuration) --output $(Build.ArtifactStagingDirectory)/api-package'


    - task: PublishPipelineArtifact@1
      displayName: 'Publish Pipeline Artifact'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/api-package'
        artifact: 'WeatherForecastApi'

  - job: build_and_test
    displayName: 'Build and Test .Net 8 Application'
    dependsOn: publish_artifact
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core SDK 8.x'
      inputs:
        version: '8.x'
    - task: DotNetCoreCLI@2
      displayName: 'Dotnet build'
      inputs:
        projects: '**/*.csproj'
        arguments: '--configuration $(configuration)'
    - task: DotNetCoreCLI@2
      displayName: 'Dotnet Test'
      inputs:
        command: test
        projects: '**/*.UnitTest.csproj'
        arguments: '--configuration $(configuration)'

- stage: cd
  displayName: Continuous Deployment
  dependsOn: ci
  condition: succeeded()
  jobs:
  - template: stage-deployment.yml
    parameters:
      ResourceGroupName: 'MyResourceGroup'
      WebAppName: 'ijwebappdotnet'

# just to test build number ID
#- stage: demo
#  jobs:
#    - job: demo_job
#      steps:
#        - script: echo $(ProductVersion)
#          displayName: 'Display Product Version'

